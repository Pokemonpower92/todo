{"version":3,"sources":["Components/Todo.jsx","Components/TodoForm.jsx","Components/TodoList.jsx","App.js","index.js"],"names":["Todo","state","task","props","editing","handleChange","evt","setState","target","name","value","handleSubmit","preventDefault","editTodo","id","handleEdit","handleDelete","removeTodo","handleStrike","toggleStrike","this","className","onSubmit","type","onChange","class","aria-hidden","done","onClick","Component","TodoForm","addTodo","uuidv4","htmlFor","placeholder","TodoList","todos","todo","filter","editedTodo","newTodos","updatedTodos","map","td","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9ed6b00.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../Styles/Todo.css\";\n\nclass Todo extends Component {\n    state = {\n        task: this.props.task,\n        editing: false\n    }\n\n    handleChange = (evt) => {\n        this.setState({\n        [evt.target.name]: evt.target.value,\n        })\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        this.props.editTodo({ \n            task: this.state.task, \n            id: this.props.id,\n        })\n        this.handleEdit();\n    }\n\n    handleEdit = () => {\n        this.setState({\n            editing: !this.state.editing,\n        })\n    }\n\n    handleDelete = (evt) => {\n        evt.preventDefault();\n        this.props.removeTodo(this.props.id);\n    }\n\n    handleStrike = (evt) => {\n        evt.preventDefault();\n        this.props.toggleStrike(this.props.id);\n    }\n\n    render(){\n        const { task } = this.props;\n        let body;\n\n        if(this.state.editing){\n            body = \n            <div className=\"Todo-editing\">\n                    <form onSubmit={this.handleSubmit} className=\"Todo-editing-content\">\n                        <input\n                            type=\"text\"\n                            id='task'\n                            name='task'\n                            value={this.state.task}\n                            onChange={this.handleChange}\n                            className=\"Todo-editing-form\"\n                        />\n                        <div className=\"Todo-editing-button\">\n                            <button><i class=\"fa fa-check\" aria-hidden=\"true\"></i></button>\n                        </div>\n                    </form>\n            </div>\n        } else {\n            body =\n            <div className={this.props.done ? \"Todo-finished\" : \"Todo-rendered\"}>\n                <div className=\"Todo-rendered-content\">\n                    <li\n                        onClick={this.handleStrike} \n                    >\n                        { task }\n                    </li>\n                    <div className=\"Todo-rendered-buttons\">\n                        <button onClick={this.handleEdit} ><i class=\"fa fa-pen\" aria-hidden=\"true\" ></i></button>\n                        <button onClick={this.handleDelete} ><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n                    </div>\n                </div>\n            </div>\n        }\n        return body\n    }\n}\n\nexport default Todo;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport \"../Styles/TodoForm.css\"\n\nclass TodoForm extends Component {\n    state = {\n        task: \"\",\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        this.props.addTodo({...this.state, id: uuidv4(), done: false});\n        this.setState({\n            task: \"\",\n        })\n    }\n\n    handleChange = (evt) => {\n        this.setState({\n            [evt.target.name]: evt.target.value,\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"TodoForm\">\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"task\"></label>\n                    <input\n                        className=\"TodoForm-input\"\n                        type=\"text\"\n                        id='task'\n                        name='task'\n                        value={this.state.task}\n                        placeholder=\"New Task\"\n                        onChange={this.handleChange}\n                    />\n                    <button className=\"TodoForm-button\">Submit!</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default TodoForm;","import React, { Component } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nimport '../Styles/TodoList.css';\n\nclass TodoList extends Component {\n    state = {\n        todos: [],\n    }\n\n    // Adds a todo to the exisiting state.\n    addTodo = (todo) => {\n\n        this.setState({\n            todos: [...this.state.todos, todo]\n        })\n    }\n\n    // Removes todo with id 'id'\n    removeTodo = (id) => {\n        this.setState({\n            todos: this.state.todos.filter(todo => todo.id !== id),\n        })\n    }\n\n    // Changes todo with id editedTodo.id to editedTodo.\n    editTodo = (editedTodo) => {\n        let newTodos = [...this.state.todos];\n\n        for(let todo of newTodos){\n            if(todo.id === editedTodo.id){\n                todo.task = editedTodo.task;\n                break;\n            }\n        }\n\n        this.setState({\n            todos: [...newTodos],\n        })\n    }\n\n    // This toggles the todo as being 'done'\n    toggleStrike = (id) => {\n        const updatedTodos = this.state.todos.map(todo => {\n            if (todo.id === id){\n                return { ...todo, done: !todo.done};\n            }\n            else {\n                return todo;\n            }\n        })\n\n        this.setState({\n            todos: updatedTodos,\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"TodoList\">\n                <h1 className=\"TodoList-title\">Todo List</h1>\n                <ul className=\"TodoList-list\">\n                    {this.state.todos.map(td => (\n                        <Todo\n                            key={td.id}\n                            id={td.id}\n                            task={td.task}\n                            done={td.done}\n                            removeTodo={this.removeTodo} \n                            editTodo={this.editTodo}\n                            toggleStrike={this.toggleStrike}\n                        />\n                    ))}\n                </ul>\n                <div className=\"TodoList-form\">\n                    <TodoForm addTodo={this.addTodo} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoList;","import './App.css';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}